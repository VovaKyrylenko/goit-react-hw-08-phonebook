{"version":3,"file":"static/js/149.0d9d7678.chunk.js","mappings":"gXAKaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0JAQTE,EAAQF,EAAAA,EAAAA,GAAH,oFAiBLG,GAbYH,EAAAA,EAAAA,IAAH,iRAaGA,EAAAA,EAAAA,IAAH,6GAaTI,GANQJ,EAAAA,EAAAA,MAAH,wFAMS,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAUC,GAAb,mBACzB,SAAC,KAAD,kBAAeD,GAAWC,GADD,GAIdC,GAAQP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,iF,iKC4BlB,EA7DkB,WAChB,IAKMS,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,qBAC5BC,MAAOH,EAAAA,KACJG,MAAM,wBACND,SAAS,qBACZE,SAAUJ,EAAAA,KAAaE,SAAS,0BAQlC,OACE,SAAC,KAAD,CACEG,cAtBkB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAoBRL,iBAAkBA,EAClBO,SATa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BX,GAASY,EAAAA,EAAAA,IAAWF,IACpBC,GACD,EAGC,UAKE,UAAC,IAAD,CAAWE,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAASC,aAAa,MAAjE,WACE,SAAC,KAAD,kCACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOZ,KAAK,OAAZ,SACG,gBAAGR,EAAH,EAAGA,MAAH,OAAe,SAAC,MAAD,kBAAiBA,GAAjB,IAAwBqB,MAAM,SAA7C,KAEH,SAAC,KAAD,CAAOb,KAAK,OAAOc,UAAU,YAG/B,UAAC,KAAD,YACE,SAAC,KAAD,CAAOd,KAAK,QAAZ,SACG,gBAAGR,EAAH,EAAGA,MAAH,OACC,SAAC,MAAD,kBAAiBA,GAAjB,IAAwBqB,MAAM,QAAQE,KAAK,UAD5C,KAIH,SAAC,KAAD,CAAOf,KAAK,QAAQc,UAAU,YAGhC,UAAC,KAAD,YACE,SAAC,KAAD,CAAOd,KAAK,WAAZ,SACG,gBAAGR,EAAH,EAAGA,MAAH,OACC,SAAC,MAAD,kBAAiBA,GAAjB,IAAwBqB,MAAM,WAAWE,KAAK,aAD/C,KAIH,SAAC,KAAD,CAAOf,KAAK,WAAWc,UAAU,YAEnC,SAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYF,KAAK,SAASG,KAAK,QAA/C,wBAMP,EC/DD,EAPkB,WAChB,OACE,gBAAKT,MAAO,CAAEC,OAAQ,QAAtB,UACE,SAAC,EAAD,KAGL,C","sources":["components/AddContactForm/AddContactForm.styled.js","components/LogUpForm.js","pages/logupPage.js"],"sourcesContent":["import { ErrorMessage, Form } from 'formik';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { TextField } from '@mui/material';\n\nexport const FormStyle = styled(Form)`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\nexport const Title = styled.h2`\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  background-color: white;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  width: 30%;\n  margin: 0 auto;\n`;\n\nexport const FormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  width: 80%;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5rem;\n  color: #666;\n  font-weight: bold;\n`;\n\nexport const CustomInput = ({ field, ...props }) => (\n  <TextField {...field} {...props} />\n);\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  font-size: 1rem;\n  margin-top: 0.5rem;\n`;\n","import React from 'react';\nimport { Field, Formik } from 'formik';\nimport {\n  Error,\n  FormField,\n  FormStyle,\n  CustomInput,\n  Title,\n} from 'components/AddContactForm/AddContactForm.styled';\nimport { Button } from '@mui/material';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { userSignup } from 'redux/userSlice';\n\nconst LogUpForm = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Login is required'),\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(userSignup(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <FormStyle style={{ margin: 'auto', width: '35%' }} autoComplete=\"off\">\n        <Title> Create an account</Title>\n        <FormField>\n          <Field name=\"name\">\n            {({ field }) => <CustomInput {...field} label=\"Name\" />}\n          </Field>\n          <Error name=\"name\" component=\"div\" />\n        </FormField>\n\n        <FormField>\n          <Field name=\"email\">\n            {({ field }) => (\n              <CustomInput {...field} label=\"Email\" type=\"email\" />\n            )}\n          </Field>\n          <Error name=\"email\" component=\"div\" />\n        </FormField>\n\n        <FormField>\n          <Field name=\"password\">\n            {({ field }) => (\n              <CustomInput {...field} label=\"Password\" type=\"password\" />\n            )}\n          </Field>\n          <Error name=\"password\" component=\"div\" />\n        </FormField>\n        <Button variant=\"contained\" type=\"submit\" size=\"large\">\n          Log Up\n        </Button>\n      </FormStyle>\n    </Formik>\n  );\n};\n\nexport default LogUpForm;\n","import LogUpForm from 'components/LogUpForm';\nimport React from 'react';\n\nconst LogUpPage = () => {\n  return (\n    <div style={{ margin: 'auto' }}>\n      <LogUpForm />\n    </div>\n  );\n};\nexport default LogUpPage;\n"],"names":["FormStyle","styled","Form","Title","FormField","CustomInput","field","props","Error","ErrorMessage","dispatch","useDispatch","validationSchema","Yup","name","required","email","password","initialValues","onSubmit","values","resetForm","userSignup","style","margin","width","autoComplete","label","component","type","Button","variant","size"],"sourceRoot":""}